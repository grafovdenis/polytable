class Autogenerated {
  Week week;
  List<Days> days;
  Group group;

  Autogenerated({this.week, this.days, this.group});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    week = json['week'] != null ? new Week.fromJson(json['week']) : null;
    if (json['days'] != null) {
      days = new List<Days>();
      json['days'].forEach((v) {
        days.add(new Days.fromJson(v));
      });
    }
    group = json['group'] != null ? new Group.fromJson(json['group']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.week != null) {
      data['week'] = this.week.toJson();
    }
    if (this.days != null) {
      data['days'] = this.days.map((v) => v.toJson()).toList();
    }
    if (this.group != null) {
      data['group'] = this.group.toJson();
    }
    return data;
  }
}

class Week {
  String dateStart;
  String dateEnd;
  bool isOdd;

  Week({this.dateStart, this.dateEnd, this.isOdd});

  Week.fromJson(Map<String, dynamic> json) {
    dateStart = json['date_start'];
    dateEnd = json['date_end'];
    isOdd = json['is_odd'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['date_start'] = this.dateStart;
    data['date_end'] = this.dateEnd;
    data['is_odd'] = this.isOdd;
    return data;
  }
}

class Days {
  int weekday;
  String date;
  List<Lessons> lessons;

  Days({this.weekday, this.date, this.lessons});

  Days.fromJson(Map<String, dynamic> json) {
    weekday = json['weekday'];
    date = json['date'];
    if (json['lessons'] != null) {
      lessons = new List<Lessons>();
      json['lessons'].forEach((v) {
        lessons.add(new Lessons.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['weekday'] = this.weekday;
    data['date'] = this.date;
    if (this.lessons != null) {
      data['lessons'] = this.lessons.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Lessons {
  String subject;
  String subjectShort;
  int type;
  String additionalInfo;
  String timeStart;
  String timeEnd;
  int parity;
  TypeObj typeObj;
  List<Groups> groups;
  List<Teachers> teachers;
  List<Auditories> auditories;

  Lessons(
      {this.subject,
        this.subjectShort,
        this.type,
        this.additionalInfo,
        this.timeStart,
        this.timeEnd,
        this.parity,
        this.typeObj,
        this.groups,
        this.teachers,
        this.auditories});

  Lessons.fromJson(Map<String, dynamic> json) {
    subject = json['subject'];
    subjectShort = json['subject_short'];
    type = json['type'];
    additionalInfo = json['additional_info'];
    timeStart = json['time_start'];
    timeEnd = json['time_end'];
    parity = json['parity'];
    typeObj =
    json['typeObj'] != null ? new TypeObj.fromJson(json['typeObj']) : null;
    if (json['groups'] != null) {
      groups = new List<Groups>();
      json['groups'].forEach((v) {
        groups.add(new Groups.fromJson(v));
      });
    }
    if (json['teachers'] != null) {
      teachers = new List<Teachers>();
      json['teachers'].forEach((v) {
        teachers.add(new Teachers.fromJson(v));
      });
    }
    if (json['auditories'] != null) {
      auditories = new List<Auditories>();
      json['auditories'].forEach((v) {
        auditories.add(new Auditories.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['subject'] = this.subject;
    data['subject_short'] = this.subjectShort;
    data['type'] = this.type;
    data['additional_info'] = this.additionalInfo;
    data['time_start'] = this.timeStart;
    data['time_end'] = this.timeEnd;
    data['parity'] = this.parity;
    if (this.typeObj != null) {
      data['typeObj'] = this.typeObj.toJson();
    }
    if (this.groups != null) {
      data['groups'] = this.groups.map((v) => v.toJson()).toList();
    }
    if (this.teachers != null) {
      data['teachers'] = this.teachers.map((v) => v.toJson()).toList();
    }
    if (this.auditories != null) {
      data['auditories'] = this.auditories.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class TypeObj {
  int id;
  String name;
  String abbr;

  TypeObj({this.id, this.name, this.abbr});

  TypeObj.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    abbr = json['abbr'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['name'] = this.name;
    data['abbr'] = this.abbr;
    return data;
  }
}

class Groups {
  int id;
  String name;
  int level;
  String type;
  int kind;
  String spec;
  Faculty faculty;

  Groups(
      {this.id,
        this.name,
        this.level,
        this.type,
        this.kind,
        this.spec,
        this.faculty});

  Groups.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    level = json['level'];
    type = json['type'];
    kind = json['kind'];
    spec = json['spec'];
    faculty =
    json['faculty'] != null ? new Faculty.fromJson(json['faculty']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['name'] = this.name;
    data['level'] = this.level;
    data['type'] = this.type;
    data['kind'] = this.kind;
    data['spec'] = this.spec;
    if (this.faculty != null) {
      data['faculty'] = this.faculty.toJson();
    }
    return data;
  }
}

class Faculty {
  int id;
  String name;
  String abbr;

  Faculty({this.id, this.name, this.abbr});

  Faculty.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    abbr = json['abbr'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['name'] = this.name;
    data['abbr'] = this.abbr;
    return data;
  }
}

class Teachers {
  int id;
  String fullName;
  String firstName;
  String middleName;
  String lastName;
  String grade;
  String chair;

  Teachers(
      {this.id,
        this.fullName,
        this.firstName,
        this.middleName,
        this.lastName,
        this.grade,
        this.chair});

  Teachers.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    fullName = json['full_name'];
    firstName = json['first_name'];
    middleName = json['middle_name'];
    lastName = json['last_name'];
    grade = json['grade'];
    chair = json['chair'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['full_name'] = this.fullName;
    data['first_name'] = this.firstName;
    data['middle_name'] = this.middleName;
    data['last_name'] = this.lastName;
    data['grade'] = this.grade;
    data['chair'] = this.chair;
    return data;
  }
}

class Auditories {
  int id;
  String name;
  Building building;

  Auditories({this.id, this.name, this.building});

  Auditories.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    building = json['building'] != null
        ? new Building.fromJson(json['building'])
        : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['name'] = this.name;
    if (this.building != null) {
      data['building'] = this.building.toJson();
    }
    return data;
  }
}

class Building {
  int id;
  String name;
  String abbr;
  String address;

  Building({this.id, this.name, this.abbr, this.address});

  Building.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    abbr = json['abbr'];
    address = json['address'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['name'] = this.name;
    data['abbr'] = this.abbr;
    data['address'] = this.address;
    return data;
  }
}

class Group {
  int id;
  String name;
  int level;
  String type;
  int kind;
  String spec;
  Faculty faculty;

  Group(
      {this.id,
        this.name,
        this.level,
        this.type,
        this.kind,
        this.spec,
        this.faculty});

  Group.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    level = json['level'];
    type = json['type'];
    kind = json['kind'];
    spec = json['spec'];
    faculty =
    json['faculty'] != null ? new Faculty.fromJson(json['faculty']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['name'] = this.name;
    data['level'] = this.level;
    data['type'] = this.type;
    data['kind'] = this.kind;
    data['spec'] = this.spec;
    if (this.faculty != null) {
      data['faculty'] = this.faculty.toJson();
    }
    return data;
  }
}
